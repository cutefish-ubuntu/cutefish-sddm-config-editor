#!/usr/bin/env ruby

require 'qml'
require_relative 'version'
require_relative 'model/configuration'
require 'tempfile'
require 'json'

module SDDMConfigurationEditor
  CODE_PATH = File.dirname(__FILE__)
  CONFIG_PATH = '/etc/sddm.conf'

  class ConfigEditorController
    include QML::Access
    register_to_qml

    property(:model) do
      @configuration.model.tap do |model|
        # On any setting value change, update generated configuration file
        model.each do |section|
          section.settings.each do |setting|
            setting.value_changed.connect {generate}
          end
        end
      end
    end
    property(:config_text) {read_config}
    signal :configurationChanged, []

    def initialize
      @configuration =
        Configuration.new(JSON.parse(File.read("#{CODE_PATH}/data/config-schema.json"),
                                     symbolize_names: true),
        read_config)
      super
    end

    def read_config
      File.read(CONFIG_PATH)
    end

    def load
      self.config_text = read_config
      parse(config_text)
    end

    def save
      file = Tempfile.new('sddm-config-editor')
      file.write config_text
      file.close
      spawn 'pkexec', 'cp', file.path, CONFIG_PATH
    end

    def parse(text)
      @configuration.parse_values(text)
      configurationChanged.emit
    end

    def generate
      self.config_text = @configuration.generate_file()
    end
  end

end

QML.run do |app|
  app.load_path "#{SDDMConfigurationEditor::CODE_PATH}/ui/main-window.qml"
end
